name: Deploy Game with Firebase Secrets

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Configure Firebase with Secrets
      run: |
        # Create a temporary config file with secrets
        cat > firebase-config.js << EOF
        const firebaseConfig = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
        };
        
        if (typeof module !== 'undefined' && module.exports) {
            module.exports = firebaseConfig;
        } else {
            window.firebaseConfig = firebaseConfig;
        }
        EOF
        
    - name: Update HTML with Firebase Config
      run: |
        # Replace the placeholder config in index.html with the real config
        sed -i 's|process\.env\.FIREBASE_API_KEY \|\| "YOUR_API_KEY_HERE"|"${{ secrets.FIREBASE_API_KEY }}"|g' index.html
        sed -i 's|process\.env\.FIREBASE_AUTH_DOMAIN \|\| "YOUR_PROJECT_ID\.firebaseapp\.com"|"${{ secrets.FIREBASE_AUTH_DOMAIN }}"|g' index.html
        sed -i 's|process\.env\.FIREBASE_PROJECT_ID \|\| "YOUR_PROJECT_ID"|"${{ secrets.FIREBASE_PROJECT_ID }}"|g' index.html
        sed -i 's|process\.env\.FIREBASE_STORAGE_BUCKET \|\| "YOUR_PROJECT_ID\.firebasestorage\.app"|"${{ secrets.FIREBASE_STORAGE_BUCKET }}"|g' index.html
        sed -i 's|process\.env\.FIREBASE_MESSAGING_SENDER_ID \|\| "YOUR_SENDER_ID"|"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}"|g' index.html
        sed -i 's|process\.env\.FIREBASE_APP_ID \|\| "YOUR_APP_ID"|"${{ secrets.FIREBASE_APP_ID }}"|g' index.html
        sed -i 's|process\.env\.FIREBASE_MEASUREMENT_ID \|\| "YOUR_MEASUREMENT_ID"|"${{ secrets.FIREBASE_MEASUREMENT_ID }}"|g' index.html
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        
    - name: Deploy to Firebase Hosting
      if: github.ref == 'refs/heads/main'
      run: |
        # Install Firebase CLI
        npm install -g firebase-tools
        
        # Login to Firebase (using token from secrets)
        firebase use ${{ secrets.FIREBASE_PROJECT_ID }}
        
        # Deploy to Firebase Hosting
        firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Cleanup
      if: always()
      run: |
        # Remove temporary config file
        rm -f firebase-config.js 